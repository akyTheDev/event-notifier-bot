[project]
name = "bot"
version = "0.1.0"
description = ""
authors = [
    {name = "akyTheDev",email = "aky.dev@proton.me"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic (>=2.11.3,<3.0.0)",
    "pydantic-settings (>=2.8.1,<3.0.0)",
    "aiogram (>=3.20.0,<4.0.0)",
    "aiohttp (>=3.11.16,<4.0.0)",
    "celery (>=5.5.1,<6.0.0)",
    "redis (>=5.2.1,<6.0.0)"
]

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.5"
mypy = "^1.15.0"
pytest = "^8.3.5"
coverage = "^7.8.0"
pytest-asyncio = "^0.26.0"

[tool.poetry]
packages = [
    { include = "src/" },
    {include = "*", from = "src"},
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
exclude = ["tests"]

[tool.ruff.lint]
select = [
    # pydocstyle
    "D",
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
strict_optional = false

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["src"]
omit =["src/database/migrations.py"]

[tool.coverage.report]
skip_empty = true
show_missing = true
fail_under = 100
